
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.image.*;
import java.io.File;
import java.awt.image.FilteredImageSource;
import java.util.logging.Filter;
import javax.swing.*;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.sql.*;
import static java.sql.JDBCType.BLOB;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import static java.sql.Types.BLOB;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import net.coobird.thumbnailator.Thumbnails;
/**
 *
 * @author malya
 */
public class Registration extends javax.swing.JFrame{

    /**
     * Creates new form StudentForm
     */
    private static Registration ref=null;
    int photos;
    ImageIcon icon=null;
    byte[] data_img=null;
    Image croping=null;
    //Constructor
     Thread t;
    int x=300,left=40,y=40;
    private Registration() 
    {
        initComponents();
        
        photos=0;
        txtadminname.requestFocus();
        Dimension d=Toolkit.getDefaultToolkit().getScreenSize();
        setSize((int)d.getWidth(),(int)(d.getHeight()-40));
    }

  //Writing the method to return the object of current class.
    
    public static Registration getObj()
    {
        if(ref==null)
        {
            ref=new Registration();
            return ref;
        }
        else
            return ref;
            
    }
  
/*
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtmobile = new javax.swing.JTextField();
        txtcnfmob = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtaddress = new javax.swing.JTextArea();
        cmbpermanent = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        lblphoto1 = new javax.swing.JLabel();
        cmdbrowse = new javax.swing.JButton();
        cmdsave = new javax.swing.JButton();
        rdoshowpass = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtoffice = new javax.swing.JTextArea();
        txtadminname = new javax.swing.JTextField();
        txtusername = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        lblusetype = new javax.swing.JLabel();
        txtpass = new javax.swing.JPasswordField();
        txtfname = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtconfpas = new javax.swing.JPasswordField();
        jLabel18 = new javax.swing.JLabel();
        lblwelcome = new javax.swing.JLabel();
        lbladd = new javax.swing.JLabel();
        txtofficename = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txtdob = new javax.swing.JTextField();
        rdomale = new javax.swing.JRadioButton();
        rdofemale = new javax.swing.JRadioButton();
        txtemail = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("User Registraion");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        getContentPane().setLayout(null);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(153, 153, 255));
        jLabel6.setText("DDMMYYYY");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(430, 440, 90, 28);

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel11.setText("Office Address :");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(640, 250, 140, 22);

        txtmobile.setBackground(new java.awt.Color(204, 204, 204));
        txtmobile.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtmobile.setBorder(null);
        txtmobile.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtmobileFocusLost(evt);
            }
        });
        txtmobile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtmobileKeyTyped(evt);
            }
        });
        getContentPane().add(txtmobile);
        txtmobile.setBounds(290, 520, 210, 40);

        txtcnfmob.setBackground(new java.awt.Color(204, 204, 204));
        txtcnfmob.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtcnfmob.setBorder(null);
        txtcnfmob.setNextFocusableComponent(txtofficename);
        txtcnfmob.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtcnfmobFocusLost(evt);
            }
        });
        txtcnfmob.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcnfmobKeyTyped(evt);
            }
        });
        getContentPane().add(txtcnfmob);
        txtcnfmob.setBounds(290, 570, 210, 40);

        jLabel28.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel28.setText("Permanent Address :");
        getContentPane().add(jLabel28);
        jLabel28.setBounds(610, 470, 170, 22);

        txtaddress.setBackground(new java.awt.Color(204, 204, 204));
        txtaddress.setColumns(20);
        txtaddress.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtaddress.setRows(5);
        txtaddress.setBorder(null);
        txtaddress.setNextFocusableComponent(cmdsave);
        txtaddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtaddressKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(txtaddress);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(790, 450, 210, 110);

        cmbpermanent.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        cmbpermanent.setText("Permanent address same as office address");
        cmbpermanent.setNextFocusableComponent(txtaddress);
        cmbpermanent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbpermanentActionPerformed(evt);
            }
        });
        getContentPane().add(cmbpermanent);
        cmbpermanent.setBounds(700, 380, 310, 25);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblphoto1.setText("               Upload Photo");
        lblphoto1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel1.add(lblphoto1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 130, 160, 170));

        cmdbrowse.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        cmdbrowse.setText("Browsre...");
        cmdbrowse.setNextFocusableComponent(cmdsave);
        cmdbrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdbrowseActionPerformed(evt);
            }
        });
        jPanel1.add(cmdbrowse, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 300, 100, -1));

        cmdsave.setBackground(new java.awt.Color(255, 255, 255));
        cmdsave.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        cmdsave.setForeground(new java.awt.Color(0, 153, 153));
        cmdsave.setText("Save");
        cmdsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdsaveActionPerformed(evt);
            }
        });
        jPanel1.add(cmdsave, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 620, 120, 40));

        rdoshowpass.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        rdoshowpass.setToolTipText("Show");
        rdoshowpass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoshowpassActionPerformed(evt);
            }
        });
        jPanel1.add(rdoshowpass, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 400, 20, 10));

        txtoffice.setBackground(new java.awt.Color(204, 204, 204));
        txtoffice.setColumns(20);
        txtoffice.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtoffice.setRows(5);
        txtoffice.setBorder(null);
        txtoffice.setNextFocusableComponent(cmbpermanent);
        txtoffice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtofficeKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(txtoffice);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 240, 210, -1));

        txtadminname.setBackground(new java.awt.Color(204, 204, 204));
        txtadminname.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtadminname.setBorder(null);
        txtadminname.setNextFocusableComponent(txtfname);
        txtadminname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtadminnameFocusGained(evt);
            }
        });
        txtadminname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtadminnameActionPerformed(evt);
            }
        });
        txtadminname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtadminnameKeyTyped(evt);
            }
        });
        jPanel1.add(txtadminname, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 140, 210, 40));

        txtusername.setBackground(new java.awt.Color(204, 204, 204));
        txtusername.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtusername.setBorder(null);
        txtusername.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtusernameFocusLost(evt);
            }
        });
        jPanel1.add(txtusername, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 260, 210, 40));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel10.setText("UserName                     :");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 270, 200, -1));

        lblusetype.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        lblusetype.setText("Employee Name            :");
        jPanel1.add(lblusetype, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 140, 210, 30));

        txtpass.setBackground(new java.awt.Color(204, 204, 204));
        txtpass.setBorder(null);
        txtpass.setNextFocusableComponent(txtconfpas);
        txtpass.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtpassFocusGained(evt);
            }
        });
        txtpass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtpassKeyTyped(evt);
            }
        });
        jPanel1.add(txtpass, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 320, 210, 40));

        txtfname.setBackground(new java.awt.Color(204, 204, 204));
        txtfname.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtfname.setBorder(null);
        txtfname.setNextFocusableComponent(txtusername);
        txtfname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfnameActionPerformed(evt);
            }
        });
        txtfname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfnameKeyTyped(evt);
            }
        });
        jPanel1.add(txtfname, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 200, 210, 40));

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel13.setText("Password                      :");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 330, 190, -1));

        jLabel3.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel3.setText("Father's Name               :");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 200, 210, 40));

        txtconfpas.setBackground(new java.awt.Color(204, 204, 204));
        txtconfpas.setBorder(null);
        txtconfpas.setNextFocusableComponent(txtdob);
        txtconfpas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtconfpasFocusLost(evt);
            }
        });
        txtconfpas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtconfpasKeyTyped(evt);
            }
        });
        jPanel1.add(txtconfpas, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 380, 210, 40));

        jLabel18.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel18.setText("Confirm Password        :");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 390, 200, -1));

        lblwelcome.setBackground(new java.awt.Color(255, 255, 255));
        lblwelcome.setFont(new java.awt.Font("Calibri", 1, 60)); // NOI18N
        lblwelcome.setForeground(new java.awt.Color(255, 139, 31));
        lblwelcome.setText("User Registration");
        jPanel1.add(lblwelcome, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 45, 440, 50));

        lbladd.setBackground(new java.awt.Color(51, 255, 51));
        lbladd.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lbladd.setForeground(new java.awt.Color(51, 51, 255));
        jPanel1.add(lbladd, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 74, 580, 30));

        txtofficename.setBackground(new java.awt.Color(204, 204, 204));
        txtofficename.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtofficename.setBorder(null);
        txtofficename.setNextFocusableComponent(txtoffice);
        txtofficename.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtofficenameFocusGained(evt);
            }
        });
        txtofficename.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtofficenameKeyTyped(evt);
            }
        });
        jPanel1.add(txtofficename, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 140, 210, 40));

        jLabel27.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel27.setText("Office Name :");
        jPanel1.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 150, 120, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setText("Date of Birth                :");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 440, -1, 30));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setText("Gender                         :");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 490, -1, -1));

        jLabel19.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel19.setText("Mobile No                    :");
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 530, 200, -1));

        jLabel20.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel20.setText("What's App No            :");
        jPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 580, 200, -1));

        txtdob.setBackground(new java.awt.Color(204, 204, 204));
        txtdob.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtdob.setBorder(null);
        txtdob.setNextFocusableComponent(rdomale);
        txtdob.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtdobFocusLost(evt);
            }
        });
        txtdob.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtdobKeyTyped(evt);
            }
        });
        jPanel1.add(txtdob, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 440, 110, 30));

        buttonGroup1.add(rdomale);
        rdomale.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rdomale.setText("Male");
        rdomale.setNextFocusableComponent(rdofemale);
        jPanel1.add(rdomale, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 480, -1, -1));

        buttonGroup1.add(rdofemale);
        rdofemale.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rdofemale.setText("Female");
        rdofemale.setNextFocusableComponent(txtmobile);
        jPanel1.add(rdofemale, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 480, -1, -1));

        txtemail.setBackground(new java.awt.Color(204, 204, 204));
        txtemail.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtemail.setBorder(null);
        txtemail.setNextFocusableComponent(txtoffice);
        txtemail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtemailFocusGained(evt);
            }
        });
        txtemail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtemailKeyTyped(evt);
            }
        });
        jPanel1.add(txtemail, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 410, 210, 40));

        jLabel29.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel29.setText("Email ID :");
        jPanel1.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 380, 90, -1));

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 1380, 680);

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmdbrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdbrowseActionPerformed
       JFileChooser jf=new JFileChooser();
        FileNameExtensionFilter filter=new FileNameExtensionFilter("Jpg Files", "jpg","jpeg","png");
        jf.setFileFilter(filter);
        if(jf.showOpenDialog(this)==JFileChooser.APPROVE_OPTION)
        {
            File photo=jf.getSelectedFile();
           try
           {
                BufferedImage buf_img=ImageIO.read(photo);
                
                BufferedImage thumbal=Thumbnails.of(buf_img).size(170, 180).asBufferedImage();
                icon=new ImageIcon(thumbal);
                
                lblphoto1.setIcon(icon);
                ByteArrayOutputStream bos=new ByteArrayOutputStream();
                ImageIO.write(thumbal,"jpeg", bos);
                InputStream is=new ByteArrayInputStream(bos.toByteArray());
                
                byte[] buff=new byte[1024];
                try
                {
                    for(int readNum;(readNum=is.read(buff))!=-1;)
                    {
                        bos.write(buff,0,readNum);
                        
                    }
                }
                
                catch(Exception ex)
                {
                    JOptionPane.showMessageDialog(this, "Error in image Compression");
                }
                data_img=bos.toByteArray();
                photos=1;
           }
           catch(Exception e)
           {
               JOptionPane.showMessageDialog(this, "Error in Image Selection");
           }
        }
            
    }//GEN-LAST:event_cmdbrowseActionPerformed

    private void txtfnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfnameActionPerformed

    private void txtmobileKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmobileKeyTyped
       char ch=evt.getKeyChar();
       String text=txtmobile.getText().trim();
        if(!(Character.isDigit(ch)) || text.length()>=10)
        {
            evt.consume();
        }
    }//GEN-LAST:event_txtmobileKeyTyped

    private void txtcnfmobKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcnfmobKeyTyped
        
       char ch=evt.getKeyChar();
       String text=txtcnfmob.getText().trim();
      
        if(!(Character.isDigit(ch)) || text.length()>=10)
        {
            evt.consume();
        }
    }//GEN-LAST:event_txtcnfmobKeyTyped

    private void txtadminnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtadminnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtadminnameActionPerformed

    private void cmbpermanentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbpermanentActionPerformed
        if(cmbpermanent.isSelected())
        {
            txtaddress.setText(txtoffice.getText());
        }
        else
        {
            txtaddress.setText("");
        }
    }//GEN-LAST:event_cmbpermanentActionPerformed

    private void txtadminnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtadminnameKeyTyped
        char ch=evt.getKeyChar();
        //String text=txtadminname.getText().trim();
        if(!(Character.isAlphabetic(ch))&& ch!=' ')
        {
            evt.consume();
        }
    }//GEN-LAST:event_txtadminnameKeyTyped

    private void txtfnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfnameKeyTyped
       
        char ch=evt.getKeyChar();
        //String text=txtadminname.getText().trim();
        if(!(Character.isAlphabetic(ch)) && ch!=' ')
        {
            evt.consume();
        }
    }//GEN-LAST:event_txtfnameKeyTyped

    private void txtofficenameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtofficenameKeyTyped
       
        char ch=evt.getKeyChar();
        //String text=txtadminname.getText().trim();
        if(!(Character.isAlphabetic(ch)) && ch!=' ')
        {
            evt.consume();
        }
    }//GEN-LAST:event_txtofficenameKeyTyped

    private void txtdobKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtdobKeyTyped
       
       char ch=evt.getKeyChar();
       String text=txtdob.getText().trim();
        if(!Character.isDigit(ch) || text.length()>=8 )
        {
            evt.consume();
        }
    }//GEN-LAST:event_txtdobKeyTyped

    private void cmdsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdsaveActionPerformed
        
        if(!(txtusername.getText()!=null|| txtpass.getPassword()!=null||txtfname.getText()!=null||
          txtofficename.getText()!=null||txtmobile.getText()!=null||txtoffice.getText()!=null||txtaddress.getText()!=null||
           txtadminname.getText()!=null||txtdob.getText()!=null)||photos==0)
        {
               JOptionPane.showMessageDialog(this, "Please fill the form Correctly and upload Image", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
           try
           {
               Connection cn=Database.getConnection();
               String sql="INSERT INTO employee(username,password,name,fname,dob,gender,mobile,officename,officeadd,permanentadd,photo) VALUES(?,?,?,?,?,?,?,?,?,?,?);";
               
               PreparedStatement ps=cn.prepareStatement(sql);
               ps.setString(1, txtusername.getText());
               ps.setString(2, new String(txtpass.getPassword()));
               ps.setString(3,txtadminname.getText());
               ps.setString(4, txtfname.getText());
               ps.setString(5, txtdob.getText());
               if(rdomale.isSelected())
                   ps.setString(6, "M");
               else
                   ps.setString(6, "F");
               ps.setString(7, txtmobile.getText());
               ps.setString(8, txtofficename.getText());
               ps.setString(9, txtoffice.getText());
               ps.setString(10, txtaddress.getText());
               ps.setBytes(11, data_img);
               ps.executeUpdate();
               JOptionPane.showMessageDialog(this, "Congratulation!! You are registered. Your User Name is: "+txtusername.getText()+" and Passwword: "+new String(txtpass.getPassword())+".","Registration Info",JOptionPane.INFORMATION_MESSAGE);
               cn.close();
               dispose();
           }
           catch(Exception e)
           {
               JOptionPane.showMessageDialog(this, e.getMessage());
           }
            
        }
    }//GEN-LAST:event_cmdsaveActionPerformed

    private void txtusernameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtusernameFocusLost
   
         try
       {
           boolean userexist=false;
           Connection cn=Database.getConnection();
           String sql="select username from employee;";
           PreparedStatement ps=cn.prepareStatement(sql);
           ResultSet rs=ps.executeQuery();
           while(rs.next())
           {
               //JOptionPane.showMessageDialog(this, rs.getString(1));
               if(txtusername.getText().equals(new String(rs.getString(1))))
               {
                  userexist=true;
                  
        
                  break;
               }
           }
           if(userexist==true)
           {
                
               JOptionPane.showMessageDialog(this,"This username exist,Try another","User Authentication",JOptionPane.ERROR_MESSAGE);
               txtusername.requestFocus();
               cn.close();
           }
           else
           {
               txtpass.requestFocus();
               cn.close();
           }
           
       }
       catch(Exception e)
       {
           JOptionPane.showMessageDialog(this, "Cann't search access the user information");
       }
    }//GEN-LAST:event_txtusernameFocusLost

    private void txtadminnameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtadminnameFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtadminnameFocusGained

    private void txtpassFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtpassFocusGained
        
    }//GEN-LAST:event_txtpassFocusGained

    private void txtpassKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpassKeyTyped
       
    }//GEN-LAST:event_txtpassKeyTyped

    private void txtofficeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtofficeKeyTyped
       if(evt.getKeyChar()=='\t')
       {
           cmbpermanent.requestFocus();
       }
    }//GEN-LAST:event_txtofficeKeyTyped

    private void txtaddressKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtaddressKeyTyped
       if(evt.getKeyChar()=='\t')
       {
           cmdbrowse.requestFocus();
       }
    }//GEN-LAST:event_txtaddressKeyTyped

    private void txtconfpasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtconfpasFocusLost
       if(!(new String(txtpass.getPassword()).equals(new String(txtconfpas.getPassword()))))
       {
           JOptionPane.showMessageDialog(this, "Password is not matching","Error",JOptionPane.ERROR_MESSAGE);
           txtpass.requestFocus();
       }
       else
       {
           txtadminname.requestFocus();
       }
    }//GEN-LAST:event_txtconfpasFocusLost

    private void txtcnfmobFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtcnfmobFocusLost

         if(txtcnfmob.getText().length()<10 && txtmobile.getText().length()>0)
        {
            
            JOptionPane.showMessageDialog(this, "Enter correct MobileNo.","Error",JOptionPane.ERROR_MESSAGE);
            txtcnfmob.requestFocus();
        }
    }//GEN-LAST:event_txtcnfmobFocusLost

    private void txtmobileFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtmobileFocusLost
        if(txtmobile.getText().length()<10 && txtmobile.getText().length()>0)
        {
            
            JOptionPane.showMessageDialog(this, "Enter correct MobileNo.","Error",JOptionPane.ERROR_MESSAGE);
            txtmobile.requestFocus();
        }
        
    }//GEN-LAST:event_txtmobileFocusLost

    private void txtofficenameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtofficenameFocusGained
        
    

    }//GEN-LAST:event_txtofficenameFocusGained

    private void txtdobFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtdobFocusLost
        if(txtdob.getText().trim().length()!=8)
        {
            JOptionPane.showMessageDialog(this, "Date of Birth is not Correct.","Error",JOptionPane.ERROR_MESSAGE);
            txtdob.requestFocus();
        }
    }//GEN-LAST:event_txtdobFocusLost

    private void rdoshowpassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoshowpassActionPerformed
        if(rdoshowpass.isSelected())
        {
            txtconfpas.setEchoChar((char)0);
            txtpass.setEchoChar((char)0);
            txtconfpas.requestFocus();
        }
        else
        {
            txtconfpas.setEchoChar('*');
            txtpass.setEchoChar('*');
            txtconfpas.requestFocus();
        }
    }//GEN-LAST:event_rdoshowpassActionPerformed

    private void txtconfpasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtconfpasKeyTyped
        if(rdoshowpass.isSelected())
        {
            txtconfpas.setEchoChar((char)0);
            txtconfpas.requestFocus();
        }
        else
        {
            txtconfpas.setEchoChar('*');
            txtconfpas.requestFocus();
        }
    }//GEN-LAST:event_txtconfpasKeyTyped

    private void txtemailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtemailFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtemailFocusGained

    private void txtemailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtemailKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtemailKeyTyped

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        dispose();
        ref=null;
    }//GEN-LAST:event_formWindowClosed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox cmbpermanent;
    private javax.swing.JButton cmdbrowse;
    private javax.swing.JButton cmdsave;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbladd;
    private javax.swing.JLabel lblphoto1;
    private javax.swing.JLabel lblusetype;
    private javax.swing.JLabel lblwelcome;
    private javax.swing.JRadioButton rdofemale;
    private javax.swing.JRadioButton rdomale;
    private javax.swing.JRadioButton rdoshowpass;
    private javax.swing.JTextArea txtaddress;
    private javax.swing.JTextField txtadminname;
    private javax.swing.JTextField txtcnfmob;
    private javax.swing.JPasswordField txtconfpas;
    private javax.swing.JTextField txtdob;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txtfname;
    private javax.swing.JTextField txtmobile;
    private javax.swing.JTextArea txtoffice;
    private javax.swing.JTextField txtofficename;
    private javax.swing.JPasswordField txtpass;
    private javax.swing.JTextField txtusername;
    // End of variables declaration//GEN-END:variables
}
